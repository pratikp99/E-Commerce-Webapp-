package com.revature.ecom.Servlets;

import java.io.IOException;
import java.util.List;

import com.revature.ecom.Models.messageModel;
import com.revature.ecom.Models.orderModel;
import com.revature.ecom.Models.userModel;
import com.revature.ecom.service.OrderService;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

/**
 * Servlet implementation class OrderServlet
 */
public class OrderServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private OrderService orderService;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public OrderServlet() {
        super();
        orderService = new OrderServiceIMPL();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		 HttpSession session = request.getSession();
	        userModel activeUser = (userModel) session.getAttribute("activeUser");

	        if (activeUser == null) {
	            messageModel message = new messageModel("You are not logged in! Login first!!", "error", "alert-danger");
	            session.setAttribute("message", message);
	            response.sendRedirect("login.jsp");
	            return;
	        }

	        List<orderModel> orderList = orderService.getAllOrdersByUserId(activeUser.getUserId());
	        request.setAttribute("orderList", orderList);
	        request.getRequestDispatcher("myOrders.jsp").forward(request, response);
	    }

}
